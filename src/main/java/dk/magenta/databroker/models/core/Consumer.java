package dk.magenta.databroker.models.core;
// Generated Nov 5, 2014 3:21:03 PM by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Consumer generated by hbm2java
 */
@Entity
@Table(name="Consumer"
)
public class Consumer  implements java.io.Serializable {


     private Integer consumerId;
     private ConsumerStatus consumerStatus;
     private String uuid;
     private boolean allowUuidonlyAccess;
     private Set<PasswordLogin> passwordLogins = new HashSet<PasswordLogin>(0);
     private Set<IpAuthentication> ipAuthentications = new HashSet<IpAuthentication>(0);
     private Set<RequestLog> requestLogs = new HashSet<RequestLog>(0);

    public Consumer() {
    }

	
    public Consumer(ConsumerStatus consumerStatus, boolean allowUuidonlyAccess) {
        this.consumerStatus = consumerStatus;
        this.allowUuidonlyAccess = allowUuidonlyAccess;
    }
    public Consumer(ConsumerStatus consumerStatus, String uuid, boolean allowUuidonlyAccess, Set<PasswordLogin> passwordLogins, Set<IpAuthentication> ipAuthentications, Set<RequestLog> requestLogs) {
       this.consumerStatus = consumerStatus;
       this.uuid = uuid;
       this.allowUuidonlyAccess = allowUuidonlyAccess;
       this.passwordLogins = passwordLogins;
       this.ipAuthentications = ipAuthentications;
       this.requestLogs = requestLogs;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ConsumerId", unique=true, nullable=false)
    public Integer getConsumerId() {
        return this.consumerId;
    }
    
    public void setConsumerId(Integer consumerId) {
        this.consumerId = consumerId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ConsumerStatusId", nullable=false)
    public ConsumerStatus getConsumerStatus() {
        return this.consumerStatus;
    }
    
    public void setConsumerStatus(ConsumerStatus consumerStatus) {
        this.consumerStatus = consumerStatus;
    }
    
    @Column(name="UUID", length=36)
    public String getUuid() {
        return this.uuid;
    }
    
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }
    
    @Column(name="AllowUUIDOnlyAccess", nullable=false)
    public boolean isAllowUuidonlyAccess() {
        return this.allowUuidonlyAccess;
    }
    
    public void setAllowUuidonlyAccess(boolean allowUuidonlyAccess) {
        this.allowUuidonlyAccess = allowUuidonlyAccess;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="consumer")
    public Set<PasswordLogin> getPasswordLogins() {
        return this.passwordLogins;
    }
    
    public void setPasswordLogins(Set<PasswordLogin> passwordLogins) {
        this.passwordLogins = passwordLogins;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="consumer")
    public Set<IpAuthentication> getIpAuthentications() {
        return this.ipAuthentications;
    }
    
    public void setIpAuthentications(Set<IpAuthentication> ipAuthentications) {
        this.ipAuthentications = ipAuthentications;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="consumer")
    public Set<RequestLog> getRequestLogs() {
        return this.requestLogs;
    }
    
    public void setRequestLogs(Set<RequestLog> requestLogs) {
        this.requestLogs = requestLogs;
    }




}


